version: "3"

tasks:
  default:
    desc: 构建所有架构
    deps:
      - task: pre
      - task: arch:x86_64
    cmds:
      - echo "构建完成"

  release:
    desc: Release the project
    cmds:
      - echo "Release the project"

  pre:
    desc: "创建tag, 打包源码"
    cmds:
      - echo "创建tag, 打包源码"
      - |
        git add . && git commit -m "release {{.GIT_TAG_NEXT}}" || true
        git tag -a {{.GIT_TAG_NEXT}} -m "release {{.GIT_TAG_NEXT}}"

  arch:x86_64:
    desc: Build the project for x86_64
    vars:
      ARCH: "x86_64"
      VERSION: "{{.GIT_TAG_NEXT}}-{{.ARCH}}"
      IMAGE: "{{.GO_APP_PROJECT}}:{{.VERSION}}"
      REGISTRY: "docker.io/lwmacct"
    cmds:
      - |
        echo "构建项目: {{.GO_APP_NAME}}-{{.VERSION}}"
        export CGO_ENABLED=0
        export GOOS=linux
        export GOARCH=amd64
        go build -ldflags "{{.GO_BUILD_LDFLAGS}}" -a -installsuffix cgo -o {{.GO_APP_PATH}}-{{.VERSION}} .
        upx -9 -q {{.GO_APP_PATH}}-{{.VERSION}}
      - |
        jq 'del(.credsStore)' ~/.docker/config.json >~/.docker/config.json.tmp && mv ~/.docker/config.json.tmp ~/.docker/config.json
        docker buildx build --progress plain --builder default --platform {{.ARCH}} -t {{.IMAGE}} --network host -f - --load . <<EOF
        FROM alpine:latest
        RUN set -eux; \
            sed -i 's/dl-cdn.alpinelinux.org/mirrors.ustc.edu.cn/g' /etc/apk/repositories; \
            apk add --no-cache tini bash tzdata; \
            cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime; \
            echo "Asia/Shanghai" > /etc/timezone; \
            echo;
        WORKDIR /apps/data
        COPY .local/bin/{{.GO_APP_NAME}}-{{.VERSION}} /usr/local/bin/{{.GO_APP_NAME}}

        ENTRYPOINT ["tini", "--"]
        CMD ["{{.GO_APP_NAME}}", "version", "run"]
        EOF
      - |
        docker tag {{.IMAGE}} {{.REGISTRY}}/{{.IMAGE}}
        docker push {{.REGISTRY}}/{{.IMAGE}}
